



#influxdb session 

#code#
cat << 'EOF' > /etc/yum.repos.d/influxdb.repo
[influxdb]
name = InfluxDB Repository - RHEL \$releasever
baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable
enabled = 1
gpgcheck = 1
gpgkey = https://repos.influxdata.com/influxdb.key
EOF
#code#

#code#
yum install influxdb -y
#code#

#code#
systemctl enable influxdb.service
#code#

#code#
systemctl start influxdb.service
#code#

#code#
influx -host localhost -execute "CREATE DATABASE kvmtop"
#code#

#code#
influx -host localhost -execute "CREATE USER "logstashuser" WITH PASSWORD 'logstashpass' WITH ALL PRIVILEGES"
#code#

#code#
influx -host localhost -execute "GRANT ALL ON kvmtop TO logstashuser"
#code#

#code#
curl -G http://localhost:8086/query -u logstashuser:logstashpass --data-urlencode "q=SHOW DATABASES"
#code#


















#logstash session 

#code#
wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm
#code#

#code#
yum localinstall jdk-8u131-linux-x64.rpm -y
#code#

#code#
java -version
#code#

#code#
rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
#code#

#code#
cat << 'EOF' > /etc/yum.repos.d/logstash-7x.repo
[logstash-7.x]
name=Elastic repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF
#code#

#code#
yum install logstash -y
#code#

#code#
cat <<'EOF'> /etc/logstash/conf.d/kvm.conf
input {
    tcp {
        port => 8123
        codec => json
    }    
}

filter {
    metricize {
        # split event into domain and host event
       metrics => [ "domains", "host", "profile" ]
       value_field_name => "rawin"
    }

    if [metric] == "domains" {
        # produce one event for each domain
        split {
            field => "rawin"
        }
    }

    if [metric] == "domains" or [metric] == "host" {
        # move fields form 'rawin' object to root
        ruby {
            code => "
                if event.get('rawin').respond_to?('each')
                    event.get('rawin').each {|k, v|
                        event.set(k, v)
                    }
                end
                event.remove('rawin')
            "
        }
    }

    if [metric] == "profile" {
        ruby {
            code => "
                if event.get('rawin').respond_to?('each')
                    profile = {}
                    event.get('rawin').each {|k, v|
                        if k == 'name'
                            event.set('name', v)
                        elsif k == 'periodTree'
                            profile['periodTree'] = v
                        elsif k == 'settings'
                            profile['settings'] = v
                        end
                    }
                    event.set('profile', profile.to_json)
                end
                event.remove('rawin')
            "
        }
    }
}

output {
    if [metric] == "domains" {
        # stdout {}
        influxdb {
            host => "localhost"
            port => 8086
            user => "logstashuser"
            password => "logstashpass"
            db => "kvmtop"
            time_precision => "ms"
            measurement => "kvmtop.domains"
            send_as_tags => ["UUID", "name", "host_name"]
            use_event_fields_for_data_points => true
        }
    }

    if [metric] == "host" {
        # stdout {}
        influxdb {
            host => "localhost"
            port => 8086
            user => "logstashuser"
            password => "logstashpass"
            db => "kvmtop"
            time_precision => "ms"
            measurement => "kvmtop.hosts"
            send_as_tags => ["host_name"]
            use_event_fields_for_data_points => true
        }    
    }

    if [metric] == "profile" {
        #stdout {}
        influxdb {
            host => "localhost"
            port => 8086
            user => "logstashuser"
            password => "logstashpass"
            db => "kvmtop"
            time_precision => "ms"
            measurement => "kvmtop.profile"
            send_as_tags => ["name"]
            use_event_fields_for_data_points => true
        }    
    }    
  
}
EOF
#code#

#code#
/usr/share/logstash/bin/logstash-plugin install logstash-filter-metricize
#code#

#code#
/usr/share/logstash/bin/logstash-plugin install logstash-output-influxdb
#code#

#code#
systemctl enable logstash.service
#code#

#code#
systemctl enable logstash.service
#code#

wait few minutes:
#code#
netstat -nlutp
#code#





# kvmtop session 
#code#
yum localinstall https://github.com/cha87de/kvmtop/releases/download/2.1.3/kvmtop_2.1.3_linux_amd64.rpm
#code#

#code#
cat <<'EOF'> /etc/kvmtop.conf
KVMTOP_TARGET=192.168.122.70:8123
KVMPROFILER_PARAMS="--states 4 --history 1 --filterstddevs 256 --outputFreq 60s --buffersize 10"
EOF
#code#

#code#
systemctl enable kvmtop.service
#code#

#code#
systemctl start kvmtop.service
#code#

curl -G "http://localhost:8086/query?db=kvmtop&pretty=true" -u logstashuser:logstashpass --data-urlencode "q=SHOW TAG KEYS"

#code#
curl -G 'http://localhost:8086/query?pretty=true' -u logstashuser:logstashpass --data-urlencode "db=kvmtop" --data-urlencode "q=SELECT \"*\" FROM \"hosts\""
#code#





############################################################

#code#
cat << 'EOF' > /etc/yum.repos.d/grafana.repo
[grafana]
name=grafana
baseurl=https://packages.grafana.com/oss/rpm
repo_gpgcheck=1
enabled=1
gpgcheck=1
gpgkey=https://packages.grafana.com/gpg.key
sslverify=1
sslcacert=/etc/pki/tls/certs/ca-bundle.crt
EOF
#code#

#code#
yum install grafana -y
#code#

#code#
systemctl enable grafana-server
#code#

#code#
systemctl start grafana-server
#code#





















