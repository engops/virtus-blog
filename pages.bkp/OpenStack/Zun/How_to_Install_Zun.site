#title#
How to Install Zun
#title#
##markdate##
7/2/2020
##markdate##
##markdate 21/8/2019 ##

#image#
Zun/Figure-1.png
#image#


#intlink#
OpenStack/Base
#intlink#

#whichserver#
All Machines!!!
#whichserver#

#code#
hostnamectl set-hostname simplezuncontroller.xurupita.nl
#code#

#code#
hostnamectl set-hostname simplezuncompute.xurupita.nl
#code#

Disable the SELinux:
#code#
sed -e 's/SELINUX=.*/SELINUX=permissive/' /etc/selinux/config -i
setenforce 0
#code#

And the FirewallD:
#code#
systemctl stop firewalld
systemctl disable firewalld
#code#

#code#
cat << 'EOF' >> /etc/hosts
192.168.88.13    simplezuncontroller.xurupita.nl     simplezuncontroller
192.168.88.14    simplezuncompute.xurupita.nl     simplezuncompute
EOF
#code#


#code#
yum install chrony -y
#code#

#code#
cat <<'EOF'> /etc/chrony.conf
server simplecontroller iburst
driftfile /var/lib/chrony/drift
makestep 1.0 3
rtcsync
logdir /var/log/chrony
EOF
#code#

#code#
systemctl enable chronyd.service
systemctl start chronyd.service
#code#

#code#
chronyc sources 
#code#

#code#
yum install centos-release-openstack-stein wget epel-release -y
#code#

#code#
yum install mariadb openstack-utils python-openstackclient -y
#code#


#whichserver#
simplezuncontroller
#whichserver#



#code#
mysql -u root -p'MDB_PASS' -h simplecontroller -e "CREATE DATABASE zun CHARACTER SET utf8"
mysql -u root -p'MDB_PASS' -h simplecontroller -e "GRANT ALL PRIVILEGES ON zun.* TO 'zun'@'%' IDENTIFIED BY 'ZUN_DBPASSWORD'"
#code#

#code#
mysql -u zun -p'ZUN_DBPASSWORD' -h simplecontroller
#code#


#code#
cat <<'EOF'> admin_openrc
export OS_USERNAME=admin
export OS_PASSWORD=ADMIN_PASS
export OS_PROJECT_NAME=admin
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_DOMAIN_NAME=Default
export OS_AUTH_URL=http://simplecontroller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_REGION_NAME=EURegion
export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;31m\][\W]($OS_PROJECT_NAME-$OS_REGION_NAME)\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
EOF
#code#


#code#
source admin_openrc
#code#


#code#
openstack user create --domain default --password ZUN_PASSWORD zun
#code#

#code#
openstack role add --project service --user zun admin
#code#

#code#
openstack service create --name zun --description "Container Service" container
#code#

#code#
openstack endpoint create --region EURegion container public http://simplezuncontroller:9517/v1
openstack endpoint create --region EURegion container internal http://simplezuncontroller:9517/v1
openstack endpoint create --region EURegion container admin http://simplezuncontroller:9517/v1
#code#

#code#
groupadd --system zun
useradd --home-dir "/var/lib/zun" --system --shell /bin/false -g zun zun
#code#

#code#
mkdir -p /etc/zun
mkdir -p /var/log/zun
#code#

#code#
chown zun:zun /var/log/zun
chown zun:zun /etc/zun
#code#

#code#
yum install python-pip git python-devel libffi-devel gcc openssl-devel -y
#code#





#code#
pip install --upgrade pip
#code#

#code#
pip install more-itertools==5.0.0
#code#

#code#
pip install zun==3.0.0
#code#

#code#
pip install pip==8.1.1
#code#

#code#
pip install zun==3.0.0
#code#

#code#
cat <<'EOF'> /etc/zun/api-paste.ini
[pipeline:main]
pipeline = cors request_id osprofiler authtoken api_v1

[app:api_v1]
paste.app_factory = zun.api.app:app_factory

[filter:authtoken]
acl_public_routes = /, /v1
paste.filter_factory = zun.api.middleware.auth_token:AuthTokenMiddleware.factory

[filter:osprofiler]
paste.filter_factory = zun.common.profiler:WsgiMiddleware.factory

[filter:request_id]
paste.filter_factory = oslo_middleware:RequestId.factory

[filter:cors]
paste.filter_factory =  oslo_middleware.cors:filter_factory
oslo_config_project = zun
EOF
#code#
















##############################################################################
#code#
cd /var/lib/
#code#

#code#
git clone -b stable/stein https://git.openstack.org/openstack/zun.git
#code#

#code#
chown -R zun:zun zun
#code#

#code#
cd /var/lib/zun
#code#

#code#
pip install --upgrade pip
pip install -r requirements.txt
python setup.py install
#code#

#code#
bash -c "git clone https://github.com/micheles/decorator && cd decorator && pip install . && exit"
#code#

#code#
su -s /bin/sh -c "oslo-config-generator --config-file etc/zun/zun-config-generator.conf" zun
#code#

#code#
su -s /bin/sh -c "cp etc/zun/zun.conf.sample /etc/zun/zun.conf" zun
su -s /bin/sh -c "cp etc/zun/api-paste.ini /etc/zun" zun
#code#
##############################################################################











#code#
openstack-config --set /etc/zun/zun.conf DEFAULT log_file /var/log/zun/zun-api.log
#code#

#code#
openstack-config --set /etc/zun/zun.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@simplecontroller
#code#

#code#
openstack-config --set /etc/zun/zun.conf api port 9517
openstack-config --set /etc/zun/zun.conf api host_ip 192.168.88.13
#code#

#code#
openstack-config --set /etc/zun/zun.conf database connection mysql+pymysql://zun:ZUN_DBPASSWORD@simplecontroller/zun?charset=utf8
#code#

#code#
openstack-config --set /etc/zun/zun.conf keystone_auth memcached_servers simplecontroller:11211
openstack-config --set /etc/zun/zun.conf keystone_auth www_authenticate_uri http://simplecontroller:5000
openstack-config --set /etc/zun/zun.conf keystone_auth project_domain_name default
openstack-config --set /etc/zun/zun.conf keystone_auth project_name service
openstack-config --set /etc/zun/zun.conf keystone_auth user_domain_name default
openstack-config --set /etc/zun/zun.conf keystone_auth password ZUN_PASSWORD
openstack-config --set /etc/zun/zun.conf keystone_auth username zun
openstack-config --set /etc/zun/zun.conf keystone_auth auth_url http://simplecontroller:5000
openstack-config --set /etc/zun/zun.conf keystone_auth auth_type password
openstack-config --set /etc/zun/zun.conf keystone_auth auth_version v3
openstack-config --set /etc/zun/zun.conf keystone_auth auth_protocol http
openstack-config --set /etc/zun/zun.conf keystone_auth service_token_roles_required True
openstack-config --set /etc/zun/zun.conf keystone_auth endpoint_type internalURL
#code#

#code#
openstack-config --set /etc/zun/zun.conf keystone_authtoken memcached_servers simplecontroller:11211
openstack-config --set /etc/zun/zun.conf keystone_authtoken www_authenticate_uri http://simplecontroller:5000
openstack-config --set /etc/zun/zun.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/zun/zun.conf keystone_authtoken project_name service
openstack-config --set /etc/zun/zun.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/zun/zun.conf keystone_authtoken password ZUN_PASSWORD
openstack-config --set /etc/zun/zun.conf keystone_authtoken username zun
openstack-config --set /etc/zun/zun.conf keystone_authtoken auth_url http://simplecontroller:5000
openstack-config --set /etc/zun/zun.conf keystone_authtoken auth_type password
openstack-config --set /etc/zun/zun.conf keystone_authtoken auth_version v3
openstack-config --set /etc/zun/zun.conf keystone_authtoken auth_protocol http
openstack-config --set /etc/zun/zun.conf keystone_authtoken service_token_roles_required True
openstack-config --set /etc/zun/zun.conf keystone_authtoken endpoint_type internalURL
#code#

#code#
openstack-config --set /etc/zun/zun.conf oslo_messaging_notifications driver messaging
#code#

#code#
openstack-config --set /etc/zun/zun.conf websocket_proxy wsproxy_host 192.168.88.13
openstack-config --set /etc/zun/zun.conf websocket_proxy wsproxy_port 6784
openstack-config --set /etc/zun/zun.conf websocket_proxy base_url ws://192.168.88.13:6784/
#code#

#code#
pip install pymysql python-memcached
#code#

#code#
su -s /bin/sh -c "zun-db-manage upgrade" zun
#code#

#code#
cat << EOF > /etc/systemd/system/openstack-zun-api.service
[Unit]
Description = OpenStack Container Service API
[Service]
ExecStart = /usr/bin/zun-api
User = zun
[Install]
WantedBy = multi-user.target
EOF
#code#

#code#
cat << EOF > /etc/systemd/system/openstack-zun-wsproxy.service
[Unit]
Description = OpenStack Container Service Websocket Proxy
[Service]
ExecStart = /usr/bin/zun-wsproxy
User = zun
[Install]
WantedBy = multi-user.target
EOF
#code#

#code#
systemctl enable openstack-zun-api
systemctl enable openstack-zun-wsproxy
#code#

#code#
systemctl start openstack-zun-api
systemctl start openstack-zun-wsproxy
#code#

#code#
pip install python-zunclient==3.3.0
#code#

#code#
openstack complete --shell bash | tee /etc/bash_completion.d/os.bash
#code#

#code#
source /etc/bash_completion.d/os.bash
#code#

#code#
openstack appcontainer service list # empty 
#code#


#subtitle#
ETCD
#subtitle#

#code#
yum install etcd -y
#code#

#code#
cat << EOF > /etc/etcd/etcd.conf
ETCD_DATA_DIR="/var/lib/etcd/default.etcd"
ETCD_LISTEN_PEER_URLS="http://192.168.88.13:2380"
ETCD_LISTEN_CLIENT_URLS="http://192.168.88.13:2379"
ETCD_NAME="controller"
ETCD_INITIAL_ADVERTISE_PEER_URLS="http://192.168.88.13:2380"
ETCD_ADVERTISE_CLIENT_URLS="http://192.168.88.13:2379"
ETCD_INITIAL_CLUSTER="controller=http://192.168.88.13:2380"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-zun01"
ETCD_INITIAL_CLUSTER_STATE="new"
EOF
#code#

#code#
systemctl enable etcd
systemctl start etcd
#code#


#whichserver#
simplezuncompute
#whichserver#

#subtitle#
neutron and openvswitch
#subtitle#

#code#
yum install openstack-neutron-openvswitch openstack-neutron-ml2 libibverbs -y
#code#

#code#
openstack-config --set /etc/neutron/neutron.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@simplecontroller
#code#

#code#
openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
#code#

#code#
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken www_authenticate_uri http://simplecontroller:5000
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://simplecontroller:5000
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers simplecontroller:11211
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_type password
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_name service
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken username neutron
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken password NEUTRON_PASS
#code#

#code#
openstack-config --set /etc/neutron/neutron.conf oslo_concurrency lock_path /var/lib/neutron/tmp
#code#

#code#
openstack-config --del /etc/neutron/plugins/ml2/openvswitch_agent.ini DEFAULT
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini ovs bridge_mappings provider_br-ex:br-ex
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini ovs enable_tunneling True
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini ovs local_ip 192.168.88.44
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini ovs integration_bridge br-int
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini agent tunnel_types vxlan
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini agent vxlan_udp_port 4789
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini securitygroup enable_security_group True
#code#

#code#
openstack-config --set /etc/neutron/plugins/ml2/openvswitch_agent.ini securitygroup enable_ipset True
#code#


#code#
cat <<'EOF'> /etc/sysconfig/network-scripts/ifcfg-eth0
NAME=eth0
DEVICE=eth0
ONBOOT=yes
DEVICETYPE=ovs
TYPE=OVSPort
OVS_BRIDGE=br-ex
BOOTPROTO=none
HOTPLUG=no
EOF
#code#

#code#
cat <<'EOF'> /etc/sysconfig/network-scripts/ifcfg-br-ex
NAME=br-ex
DEVICE=br-ex
IPADDR=192.168.88.44
PREFIX=24
DEVICETYPE=ovs
TYPE=OVSBridge
BOOTPROTO=static
HOTPLUG=no
ONBOOT=yes
GATEWAY=192.168.88.1
DNS1=192.168.88.1
EOF
#code#

#code#
ifdown eth0 ; ifup eth0
#code#

#code#
sed '/\[Service\]/a ExecStartPost=/usr/bin/chmod 0777 /var/run/openvswitch/db.sock' -i /usr/lib/systemd/system/openvswitch.service
#code#

#code#
systemctl daemon-reload
#code#

#code#
systemctl restart openvswitch
#code#


#code#
systemctl enable openvswitch.service neutron-openvswitch-agent.service
#code#

#code#
systemctl start neutron-openvswitch-agent.service
#code#












#subtitle#
kuryr
#subtitle#

#code#
groupadd --system kuryr
useradd --home-dir "/var/lib/kuryr" --create-home --system --shell /bin/false -g kuryr kuryr
gpasswd -a kuryr hugetlbfs
#code#

#code#
mkdir -p /etc/kuryr
mkdir -p /var/log/kuryr
#code#

#code#
chown -R kuryr:kuryr /etc/kuryr
#code#

#code#
yum install python-pip git python-devel libffi-devel gcc openssl-devel -y
#code#

#code#
pip install --upgrade pip
#code#

#code#
pip install more-itertools==5.0.0
#code#

#code#
pip install kuryr-libnetwork==3.0.0
#code#



###############################################################################################
#code#
cd /var/lib/kuryr
git clone -b master https://git.openstack.org/openstack/kuryr-libnetwork.git
chown -R kuryr:kuryr kuryr-libnetwork
#code#

#code#
cd kuryr-libnetwork
pip install -r requirements.txt
python setup.py install
#code#

#code#
su -s /bin/sh -c "./tools/generate_config_file_samples.sh" kuryr
su -s /bin/sh -c "cp etc/kuryr.conf.sample /etc/kuryr/kuryr.conf" kuryr
#code#
###############################################################################################

#code#
openstack-config --set /etc/kuryr/kuryr.conf DEFAULT bindir /usr/libexec/kuryr
#code#

#code#
openstack-config --set /etc/kuryr/kuryr.conf DEFAULT bindir /usr/libexec/kuryr
openstack-config --set /etc/kuryr/kuryr.conf DEFAULT capability_scope global
openstack-config --set /etc/kuryr/kuryr.conf DEFAULT process_external_connectivity False
openstack-config --set /etc/kuryr/kuryr.conf DEFAULT log_file /var/log/kuryr/kuryr.log
#code#

#code#
openstack-config --set /etc/kuryr/kuryr.conf neutron auth_type password
openstack-config --set /etc/kuryr/kuryr.conf neutron auth_url http://simplecontroller:5000
openstack-config --set /etc/kuryr/kuryr.conf neutron username neutron
openstack-config --set /etc/kuryr/kuryr.conf neutron password NEUTRON_PASS
openstack-config --set /etc/kuryr/kuryr.conf neutron project_name service
openstack-config --set /etc/kuryr/kuryr.conf neutron project_domain_name default
openstack-config --set /etc/kuryr/kuryr.conf neutron user_domain_name default
#code#

#code#
cat <<'EOF'> /etc/systemd/system/kuryr-libnetwork.service
[Unit]
After=openvswitch.service
Description = Kuryr-libnetwork - Docker network plugin for Neutron
[Service]
ExecStart = /usr/bin/kuryr-server --config-file /etc/kuryr/kuryr.conf
CapabilityBoundingSet = CAP_NET_ADMIN
[Install]
WantedBy = multi-user.target
EOF
#code#


#code#
systemctl enable kuryr-libnetwork
systemctl start kuryr-libnetwork
#code#



#subtitle#
zun
#subtitle#


#code#
groupadd --system zun
useradd --home-dir "/var/lib/zun" --system --shell /bin/false -g zun zun
gpasswd -a zun hugetlbfs
#code#

#code#
mkdir -p /etc/zun
mkdir -p /var/log/zun
#code#

#code#
chown zun:zun /var/log/zun
chown zun:zun /etc/zun
#code#


#code#
yum install python-pip git python-devel libffi-devel gcc openssl-devel bridge-utils numactl -y
#code#


##############################################################################################
#code#
cd /var/lib/
git clone -b stable/stein https://git.openstack.org/openstack/zun.git
chown -R zun:zun zun
#code#

#code#
cd zun
pip install -r requirements.txt
python setup.py install
#code#

#code#
bash -c "git clone https://github.com/micheles/decorator && cd decorator && pip install . && exit"
#code#

#code#
su -s /bin/sh -c "oslo-config-generator --config-file etc/zun/zun-config-generator.conf" zun
#code#

#code#
su -s /bin/sh -c "oslo-config-generator --config-file etc/zun/zun-config-generator.conf" zun
su -s /bin/sh -c "cp etc/zun/zun.conf.sample /etc/zun/zun.conf" zun
su -s /bin/sh -c "cp etc/zun/rootwrap.conf /etc/zun/rootwrap.conf" zun
su -s /bin/sh -c "mkdir -p /etc/zun/rootwrap.d" zun
su -s /bin/sh -c "cp etc/zun/rootwrap.d/* /etc/zun/rootwrap.d/" zun
#code#

#code#
echo 'Defaults:zun !requiretty' | tee /etc/sudoers.d/zun-rootwrap
echo 'zun ALL=(root) NOPASSWD: /usr/bin/zun-rootwrap /etc/zun/rootwrap.conf *' | tee -a /etc/sudoers.d/zun-rootwrap
#code#
##############################################################################################

#code#
pip install --upgrade pip
#code#

#code#
pip install more-itertools==5.0.0
#code#

#code#
pip install zun==3.0.0
#code#

#code#
pip install pip==8.1.1
#code#

#code#
pip install zun==3.0.0
#code#



#code#
openstack-config --set /etc/zun/zun.conf DEFAULT log_file /var/log/zun/zun-compute.log
#code#

#code#
openstack-config --set /etc/zun/zun.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@simplecontroller
#code#

#code#
openstack-config --set /etc/zun/zun.conf database connection mysql+pymysql://zun:ZUN_DBPASSWORD@simplecontroller/zun?charset=utf8
#code#

#code#
openstack-config --set /etc/zun/zun.conf keystone_auth memcached_servers simplecontroller:11211
openstack-config --set /etc/zun/zun.conf keystone_auth www_authenticate_uri http://simplecontroller:5000
openstack-config --set /etc/zun/zun.conf keystone_auth project_domain_name default
openstack-config --set /etc/zun/zun.conf keystone_auth project_name service
openstack-config --set /etc/zun/zun.conf keystone_auth user_domain_name default
openstack-config --set /etc/zun/zun.conf keystone_auth password ZUN_PASSWORD
openstack-config --set /etc/zun/zun.conf keystone_auth username zun
openstack-config --set /etc/zun/zun.conf keystone_auth auth_url http://simplecontroller:5000
openstack-config --set /etc/zun/zun.conf keystone_auth auth_type password
openstack-config --set /etc/zun/zun.conf keystone_auth auth_version v3
openstack-config --set /etc/zun/zun.conf keystone_auth auth_protocol http
openstack-config --set /etc/zun/zun.conf keystone_auth service_token_roles_required True
openstack-config --set /etc/zun/zun.conf keystone_auth endpoint_type internalURL
#code#

#code#
openstack-config --set /etc/zun/zun.conf keystone_authtoken memcached_servers simplecontroller:11211
openstack-config --set /etc/zun/zun.conf keystone_authtoken www_authenticate_uri http://simplecontroller:5000
openstack-config --set /etc/zun/zun.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/zun/zun.conf keystone_authtoken project_name service
openstack-config --set /etc/zun/zun.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/zun/zun.conf keystone_authtoken password ZUN_PASSWORD
openstack-config --set /etc/zun/zun.conf keystone_authtoken username zun
openstack-config --set /etc/zun/zun.conf keystone_authtoken auth_url http://simplecontroller:5000
openstack-config --set /etc/zun/zun.conf keystone_authtoken auth_type password
openstack-config --set /etc/zun/zun.conf keystone_authtoken auth_version v3
openstack-config --set /etc/zun/zun.conf keystone_authtoken auth_protocol http
openstack-config --set /etc/zun/zun.conf keystone_authtoken service_token_roles_required True
openstack-config --set /etc/zun/zun.conf keystone_authtoken endpoint_type internalURL
#code#

#code#
openstack-config --set /etc/zun/zun.conf oslo_messaging_notifications driver messaging
#code#



#code#
pip install pymysql python-memcached
#code#


########################################################################################

#subtitle#
docker
#subtitle#

#code#
yum install docker -y
#code#

#code#
mkdir -p /etc/systemd/system/docker.service.d
#code#

#code#
cat << EOF > /etc/systemd/system/docker.service.d/docker.conf
[Unit]
After=kuryr-libnetwork.service
[Service]
ExecStart=
ExecStart=/usr/bin/dockerd --group zun -H tcp://simplezuncompute:2375 -H unix:///var/run/docker.sock --cluster-store etcd://simplezuncontroller:2379
EOF
#code#

#code#
systemctl daemon-reload
systemctl enable docker
systemctl start docker
#code#

#code#
cat <<'EOF'> /etc/systemd/system/openstack-zun-compute.service
[Unit]
After=docker.service
Description = OpenStack Container Service Compute Agent
[Service]
ExecStart = /usr/bin/zun-compute
User = zun
[Install]
WantedBy = multi-user.target
EOF
#code#

#code#
ln -s /usr/libexec/docker/docker-runc-current /usr/bin/docker-runc 
#code#

#code#
systemctl enable openstack-zun-compute
systemctl start openstack-zun-compute
#code#

#code#
cat <<'EOF'> myuser_openrc
export OS_USERNAME=myuser
export OS_PASSWORD=myuser_pass
export OS_PROJECT_NAME=myproject
export OS_USER_DOMAIN_NAME=mydomain
export OS_PROJECT_DOMAIN_NAME=mydomain
export OS_AUTH_URL=http://simplecontroller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_REGION_NAME=EURegion
export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;31m\][\W]($OS_PROJECT_NAME-$OS_REGION_NAME)\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
EOF
#code#

#code#
openstack appcontainer run --name container1 --net network=ext-net-flat --cpu 0.5 --memory 512 cirros ping 8.8.8.8
#code#

#code#
openstack appcontainer list
#code#

#code#
openstack appcontainer logs container1
#code#

#code#
openstack appcontainer exec --interactive container1 /bin/sh
#code#

#code#
openstack appcontainer stop container1
#code#

#code#
openstack appcontainer delete container1
#code#





### from treta / net= treta-net
openstack appcontainer run --name treta-container1 --security-group all --net network=fb9a8165-3966-465f-b24e-0c28f680c846 --cpu 0.5 --memory 512 cirros ping 8.8.8.8
openstack appcontainer run --name treta-container2 --security-group all --net network=fb9a8165-3966-465f-b24e-0c28f680c846 --cpu 0.5 --memory 512 cirros ping 8.8.8.8
openstack appcontainer run --name treta-container3 --security-group all --net network=fb9a8165-3966-465f-b24e-0c28f680c846 --cpu 0.5 --memory 512 cirros ping 8.8.8.8
openstack appcontainer run --name treta-container4 --security-group all --net network=fb9a8165-3966-465f-b24e-0c28f680c846 --cpu 0.5 --memory 512 cirros ping 8.8.8.8



openstack appcontainer run --name treta-cont-ext1 --security-group all --net network=2ad9a1d6-927f-4b2a-9055-55bc974bd353 --cpu 0.5 --memory 512 cirros ping 8.8.8.8 

##############################


openstack appcontainer run --environment MYSQL_ROOT_PASSWORD=rootpass --environment MYSQL_DATABASE=wordpress --name wp-mariadb --security-group all --net network=2ad9a1d6-927f-4b2a-9055-55bc974bd353  mariadb:latest

openstack appcontainer run  --environment WORDPRESS_DB_HOST=192.168.100.119 --environment WORDPRESS_DB_USER=root --environment WORDPRESS_DB_PASSWORD=rootpass --name wp-site --security-group all --net network=2ad9a1d6-927f-4b2a-9055-55bc974bd353 wordpress:latest











